<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Sends a Chatter post to the user listed as the &quot;Assigned To&quot; on the NI Project Backlog Task to remind them the Task is overdue by 1 week.</description>
        <name>ChatterPostAfterDueDate</name>
        <label>ChatterPostAfterDueDate</label>
        <locationX>1044</locationX>
        <locationY>414</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>SendEmailReminderAfterDueDate</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>templateChatterPostAfterDueDate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Sends a Chatter post to the user listed as the &quot;Assigned To&quot; on the NI Project Backlog Task to remind them the Task is due in 1 week.</description>
        <name>ChatterPostBeforeDueDate</name>
        <label>ChatterPostBeforeDueDate</label>
        <locationX>1304</locationX>
        <locationY>117</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>SendEmailReminderBeforeDueDate</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>templateChatterPostBeforeDueDate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Sends an email reminder to the Assigned To user to remind them the task is overdue</description>
        <name>SendEmailReminderAfterDueDate</name>
        <label>SendEmailReminderAfterDueDate</label>
        <locationX>1220</locationX>
        <locationY>403</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>templateEmailReminderAfterDueDate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>varEmailRecipientsAfter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>NI Project Backlog Task is Overdue</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>Sends an email reminder to the Assigned To user to remind them the Task is due in one week</description>
        <name>SendEmailReminderBeforeDueDate</name>
        <label>SendEmailReminderBeforeDueDate</label>
        <locationX>1427</locationX>
        <locationY>88</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>templateEmailRemindBeforeDueDate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>varEmailRecipientsBefore</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Pending Task - {!$Record.NI_Project_Backlog_Item__r.Name}</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>55.0</apiVersion>
    <assignments>
        <description>Adds the Assigned To user&apos;s email address into a collection to send a reminder email</description>
        <name>AddAssignedToIntoCollectionAfter</name>
        <label>AddAssignedToIntoCollectionAfter</label>
        <locationX>537</locationX>
        <locationY>426</locationY>
        <assignmentItems>
            <assignToReference>varEmailRecipientsAfter</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetAssignedToAfterDueDate.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetImplementationOwnerAfter</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the email address of the &quot;Assigned To&quot; user into the collection to send an email reminder before the Task</description>
        <name>AddAssignedToIntoCollectionBefore</name>
        <label>AddAssignedToIntoCollectionBefore</label>
        <locationX>784</locationX>
        <locationY>77</locationY>
        <assignmentItems>
            <assignToReference>varEmailRecipientsBefore</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetAssignedToUser.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetImplementationOwnerBefore</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the Implementation Owner&apos;s email into a collection to send a reminder email</description>
        <name>AddIOIntoCollectionAfter</name>
        <label>AddIOIntoCollectionAfter</label>
        <locationX>871</locationX>
        <locationY>412</locationY>
        <assignmentItems>
            <assignToReference>varEmailRecipientsAfter</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetImplementationOwnerAfter.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ChatterPostAfterDueDate</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the Implementation Owner email address into a collection to send a reminder email</description>
        <name>AddIOIntoCollectionBefore</name>
        <label>AddIOIntoCollectionBefore</label>
        <locationX>1112</locationX>
        <locationY>128</locationY>
        <assignmentItems>
            <assignToReference>varEmailRecipientsBefore</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetImplementationOwnerBefore.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ChatterPostBeforeDueDate</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Decides if the Task has been completed. If the Task is still open (Status is not Completed), the user will get an email and a chatter notification reminding them to complete the Task.</description>
        <name>AfterDueDateDecision</name>
        <label>AfterDueDateDecision</label>
        <locationX>144</locationX>
        <locationY>435</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>TaskStillOpenAfterDueDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAssignedToAfterDueDate</targetReference>
            </connector>
            <label>TaskStillOpenAfterDueDate</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decides if the Task is completed or not. If the Task is still open, sends an email and chatter reminder to the Assigned To user.</description>
        <name>BeforeDueDateDecision</name>
        <label>BeforeDueDateDecision</label>
        <locationX>523</locationX>
        <locationY>221</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>TaskStillOpenBeforeDueDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAssignedToUser</targetReference>
            </connector>
            <label>TaskStillOpenBeforeDueDate</label>
        </rules>
    </decisions>
    <description>NICC-058179; Sends reminders to users to add Realized Benefits to Internal Projects</description>
    <environments>Default</environments>
    <formulas>
        <description>Calculates the number of months since the AH Project Backlog Completion Date</description>
        <name>formulaMonthsSinceProjectClose</name>
        <dataType>Number</dataType>
        <expression>((YEAR({!$Record.Due_Date__c}) - YEAR({!$Record.NI_Project_Backlog_Item__r.Project_Completion_Date__c}))*12) + (MONTH({!$Record.Due_Date__c}) - MONTH({!$Record.NI_Project_Backlog_Item__r.Project_Completion_Date__c}))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <description>URL to the NI Project Backlog Task record</description>
        <name>formulaTaskRecordURL</name>
        <dataType>String</dataType>
        <expression>LEFT($Api.Enterprise_Server_URL_510, FIND( &apos;/services&apos;, $Api.Enterprise_Server_URL_510)) &amp; {!$Record.Id}</expression>
    </formulas>
    <interviewLabel>NI Project Backlog Task - Realized Benefits Reminder {!$Flow.CurrentDateTime}</interviewLabel>
    <label>NI Project Backlog Task - Realized Benefits Reminder</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets the User listed as the Assigned To on the Task to send a Chatter notification</description>
        <name>GetAssignedToAfterDueDate</name>
        <label>GetAssignedToAfterDueDate</label>
        <locationX>351</locationX>
        <locationY>410</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddAssignedToIntoCollectionAfter</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Assigned_To__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the User record for the user who is currently the &quot;Assigned To&quot; on the NI Project Backlog Task. This will be used to @mention in Chatter posts and the recipient of an email message.</description>
        <name>GetAssignedToUser</name>
        <label>GetAssignedToUser</label>
        <locationX>725</locationX>
        <locationY>220</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddAssignedToIntoCollectionBefore</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Assigned_To__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets details about the Project Implementation Owner</description>
        <name>GetImplementationOwnerAfter</name>
        <label>GetImplementationOwnerAfter</label>
        <locationX>698</locationX>
        <locationY>426</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddIOIntoCollectionAfter</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.NI_Project_Backlog_Item__r.User__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets details about the Project Implementation Owner</description>
        <name>GetImplementationOwnerBefore</name>
        <label>GetImplementationOwnerBefore</label>
        <locationX>941</locationX>
        <locationY>85</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddIOIntoCollectionBefore</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.NI_Project_Backlog_Item__r.User__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>69</locationX>
        <locationY>23</locationY>
        <filterFormula>{!$Record.RecordType.DeveloperName} = &quot;Commercial_Operation_Tasks&quot; &amp;&amp;
CONTAINS({!$Record.Name}, &quot;Realized Benefits&quot;)</filterFormula>
        <object>NI_Project_Backlog_Tasks__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <name>OneWeekBeforeDueDate</name>
            <connector>
                <targetReference>BeforeDueDateDecision</targetReference>
            </connector>
            <label>1WeekBeforeDueDate</label>
            <offsetNumber>-7</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>Due_Date__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <scheduledPaths>
            <name>OneWeekAfterDueDate</name>
            <connector>
                <targetReference>AfterDueDateDecision</targetReference>
            </connector>
            <label>1WeekAfterDueDate</label>
            <offsetNumber>7</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>Due_Date__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>templateChatterPostAfterDueDate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!GetAssignedToAfterDueDate.Id}]  @[{!GetImplementationOwnerAfter.Id}] Process Improvement task is 1 week overdue.</text>
    </textTemplates>
    <textTemplates>
        <name>templateChatterPostBeforeDueDate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!GetAssignedToUser.Id}] @[{!GetImplementationOwnerBefore.Id}] As a reminder, this Process Improvement task is due in 1 week.</text>
    </textTemplates>
    <textTemplates>
        <name>templateEmailRemindBeforeDueDate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hi {!$Record.Assigned_To__r.FirstName},&lt;/p&gt;&lt;p&gt;{!formulaMonthsSinceProjectClose} months have passed since your project was completed. As the owner of the project: &lt;strong&gt;{!$Record.NI_Project_Backlog_Item__r.Name}&lt;/strong&gt;, it is time to begin recording the &lt;strong&gt;Realized Benefits&lt;/strong&gt; and complete the task assigned to you.&lt;/p&gt;&lt;p&gt;You can view the Task record &lt;a href=&quot;{!formulaTaskRecordURL}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Remember that more information on capturing realized benefits may be found &lt;a href=&quot; https://amadeusworkplace.sharepoint.com/sites/ProjectPortfolioManagement/SitePages/Value-Realization.aspx&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Thank you,&lt;/p&gt;&lt;p&gt;Process Improvement Team&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>templateEmailReminderAfterDueDate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hi {!$Record.Assigned_To__r.FirstName},&lt;/p&gt;&lt;p&gt;{!formulaMonthsSinceProjectClose} months have passed since your project was completed. As the owner of the project: &lt;strong&gt;{!$Record.NI_Project_Backlog_Item__r.Name}&lt;/strong&gt;, it is time to begin recording the &lt;strong&gt;Realized Benefits&lt;/strong&gt; and complete the task assigned to you.&lt;/p&gt;&lt;p&gt;You can view the Task record &lt;a href=&quot;{!formulaTaskRecordURL}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Remember that more information on capturing realized benefits may be found &lt;a href=&quot; https://amadeusworkplace.sharepoint.com/sites/ProjectPortfolioManagement/SitePages/Value-Realization.aspx&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Thank you,&lt;/p&gt;&lt;p&gt;Process Improvement Team&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <description>Holds a list of email addresses to send a reminder email to one week after the due date of the Task</description>
        <name>varEmailRecipientsAfter</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Holds a list of email addresses to send a reminder email to prior to the due date of a Task</description>
        <name>varEmailRecipientsBefore</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
