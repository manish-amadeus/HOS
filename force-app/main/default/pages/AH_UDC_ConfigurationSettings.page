<apex:page controller="AH_UDC_extConfigurationSettings" title="UDC Configuration Settings" setup="true">
   <apex:pagemessages />
   <apex:form id="mainform">
      <script>
         function setSelectedIndex(objSelect, setValue, objMSG) {
            var optionFound = false;
            for (i=0; i<objSelect.options.length;i++) {
                  if (setValue == objSelect.options[i].value) {
                     objSelect.options[i].selected = true;
                     optionFound = true;
                     break;
                  }
            }
            if (!optionFound) {
                  objMSG.innerHTML = 'The current value is not a valid option: <br>' + setValue;
            }
         }
      </script>
      <apex:outputpanel id="resultPanel">
         <script>
            if ('{!updateSettingName}' != '') {
               {!updateSettingName}MSG.innerHTML = '{!updateSettingStatus}';
            }
         </script>
      </apex:outputpanel>
      <!--Change Setting-->
      <apex:actionfunction name="afUpdateSetting" action="{!updateSetting}" rerender="resultPanel">
         <apex:param id="pUpdateSettingName" name="pUpdateSettingName" assignto="{!updateSettingName}" value="" />
         <apex:param id="pUpdateSettingValue" name="pUpdateSettingValue" assignto="{!updateSettingValue}" value="" />
         <apex:param id="pUpdateSettingIsMethod" name="pUpdateSettingIsMethod" assignto="{!updateSettingIsMethod}" value="" />
      </apex:actionfunction>
      <!-- Page Headers -->
      <apex:sectionheader subtitle="UDC Configuration Settings" help="UDC Configuration Settings" rendered="{!pageName==null}" />
      <apex:repeat value="{!settingGroups}" var="settingGroup" rendered="{!pageName==null}">
         <apex:pageblock title="{!settingGroups[settingGroup].groupName}" mode="edit">
            <apex:pageblocksection columns="1" showheader="false">
               <apex:repeat value="{!settingGroups[settingGroup].settings}" var="setting" id="repeatGroupNames">
                  <apex:panelgroup rendered="{!setting.PageName==null && setting.SettingType=='Page'}">
                     &#8226;&nbsp;<apex:outputlink value="{!setting.settingvalue}">{!setting.SettingDisplayName}</apex:outputlink>
                     <img src="/s.gif" alt="Help" class="helpIcon" title="{!setting.SettingHelpText}" />
                  </apex:panelgroup>
                  <apex:panelgroup rendered="{!setting.PageName==null && setting.SettingType=='Object'}">
                     &#8226;&nbsp;<apex:outputlink value="{!setting.settingvalue}">{!setting.SettingDisplayName}</apex:outputlink>
                     <img src="/s.gif" alt="Help" class="helpIcon" title="{!setting.SettingHelpText}" />
                  </apex:panelgroup>
                  <apex:panelgroup rendered="{!setting.SettingType=='GroupPage'}">
                     &#8226;&nbsp;<apex:commandlink value="{!setting.SettingDisplayName}" action="{!showSettingPage}">
                        <apex:param name="actionParameter1" value="{!setting.SettingDisplayName}" assignto="{!actionParameter1}" />
                     </apex:commandlink>
                     <img src="/s.gif" alt="Help" class="helpIcon" title="{!setting.SettingHelpText}" />
                  </apex:panelgroup>
               </apex:repeat>
            </apex:pageblocksection>
         </apex:pageblock>
      </apex:repeat>
      <apex:sectionheader subtitle="{!pageGroupName} : {!pageName}" rendered="{!pageName!=''}" />
      <apex:repeat value="{!settingGroups}" var="settingGroup" rendered="{!pageName!=''}">
         <apex:pageblock title="{!settingGroups[settingGroup].groupName}" mode="edit">
            <apex:pageblocktable columns="2" value="{!settingGroups[settingGroup].settings}" var="setting" headerclass="hidden">
               <!--Label-->
               <apex:column style="white-space:nowrap;width:10%;vertical-align:top;" rendered="{!setting.SettingType!='Page' && setting.SettingType!='HorizontalRule'&& setting.SettingType!='Break'}">
                  {!setting.SettingDisplayName}:
                  <img src="/s.gif" alt="Help" class="helpIcon" title="{!setting.SettingHelpText}" />
               </apex:column>
               <!--Horizontal Rule-->
               <apex:column style="white-space:nowrap;width:10%;vertical-align:top;" rendered="{!setting.SettingType=='HorizontalRule'}">
               </apex:column>
               <apex:column style="width:10%;" rendered="{!setting.SettingType=='HorizontalRule'}">
                  <hr width="300" align="Left" />
               </apex:column>
               <!--Break-->
               <apex:column rendered="{!setting.SettingType=='Break'}">
                  <br />
               </apex:column>
               <!--Page Link-->
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='Page'}" colspan="2">
                  &#8226;&nbsp;<apex:outputlink value="{!setting.settingvalue}">{!setting.SettingDisplayName}</apex:outputlink>
                  <img src="/s.gif" alt="Help" class="helpIcon" title="{!setting.SettingHelpText}" />
               </apex:column>
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='String'}">
                  <input html-data-settingname="{!setting.Name}" value="{!setting.SettingValue}" onchange="jsUpdateSetting(this);" style="width:95%;" />
                  <br /><label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='ProtectedString'}">
                  <input html-data-settingname="{!setting.Name}" value="**********" onchange="jsUpdateSetting(this);" style="width:95%;" />
                  <br /><label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='Time_24h'}">
                  <input html-data-settingname="{!setting.Name}" value="{!setting.SettingValue}" onchange="jsUpdateSetting(this);" style="width: 100px; text-align: right;" />
                  <br /><label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='TextArea'}">
                  <apex:inputtextarea style="width:95%;font-family:Courier" rendered="{!setting.SettingType=='TextArea'}" html-data-settingname="{!setting.Name}"
                                      value="{!setting.SettingValue}" rows="6" cols="100" onchange="jsUpdateSetting(this);">
                  </apex:inputtextarea>
                  <br /><label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='Picklist'}">
                  <select html-data-settingname="{!setting.Name}" name="{!setting.Name}" value="{!setting.SettingValue}" onchange="jsUpdateSetting(this);">
                     <apex:repeat value="{!setting.picklistValues}" var="picklistValue">
                        <option value="{!picklistValue}">{!picklistValue}</option>
                     </apex:repeat>
                  </select>
                  <br /><label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
                  <script>
                     setSelectedIndex(document.getElementsByName('{!JSINHTMLENCODE(setting.Name)}')[0], '{!JSINHTMLENCODE(setting.SettingValue)}', {!JSINHTMLENCODE(setting.Name)}MSG);
                  </script>
               </apex:column>
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='URL'}">
                  <input html-data-settingname="{!setting.Name}" value="{!setting.SettingValue}" onchange="jsUpdateSetting(this);" style="width:95%;" />
                  <br /><label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='Method'}">
                  <input id="{!setting.Name}_B" name="{!setting.Name}_B" type="button" value="Click to Request" onclick="jsMethod(this);" style="" />
                  <input id="{!setting.Name}" name="{!setting.Name}" value="{!setting.SettingValue}" style="display:none" />
                  <label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
               <apex:column style="width:90%;" rendered="{!setting.SettingType=='Integer'}">
                  <input html-data-settingname="{!setting.Name}" value="{!setting.SettingValue}" onchange="jsUpdateSetting(this);" style="width:100px;text-align:right;" min="{!setting.minValue}" max="{!setting.maxValue}" />
                  <label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
               <apex:column rendered="{!setting.SettingType=='Checkbox' && setting.isChecked==true}">
                  <input html-data-settingname="{!setting.Name}" type="Checkbox" checked="checked" onchange="jsUpdateSetting(this);" />
                  <label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
               <apex:column rendered="{!setting.SettingType=='Checkbox' && setting.isChecked==false}">
                  <input html-data-settingname="{!setting.Name}" type="Checkbox" onchange="jsUpdateSetting(this);" />
                  <label id="{!setting.Name}MSG" name="{!setting.Name}MSG"></label>
               </apex:column>
            </apex:pageblocktable>
         </apex:pageblock>
      </apex:repeat>
   </apex:form>
   <script>
      function jsMethod(obj) {
         var r = confirm("Are you sure?");
         if (r == true) {
            var settingValue = '';
            var settingName = obj.name.substring(0,obj.name.length-2);
            settingValue = document.getElementById(settingName).value;
            document.getElementById(settingName + 'MSG').innerHTML = 'Requesting...';
            afUpdateSetting(settingName, settingValue, true);
         }
      }

      function jsUpdateSetting(obj) {
         var settingValue = '';
         var settingName = obj.getAttribute("data-settingname");
         if (settingName == null) {
            settingName = obj.getAttribute("html-data-settingname");
         }

         if (obj.type == 'checkbox') {
            settingValue = obj.checked;
         } else {
            settingValue = obj.value;
         }
         document.getElementById(settingName + 'MSG').innerHTML = 'Updating...';
         afUpdateSetting(settingName, settingValue, false);
      }

      function highlightChange(obj) {
         if (obj.alt != obj.value) {
            obj.style.backgroundColor = 'yellow';
         } else{
            obj.style.backgroundColor = 'white';
         }
      }
   </script>
   <style type="text/css">
      .hidden {
         display: none;
      }
   </style>
</apex:page>